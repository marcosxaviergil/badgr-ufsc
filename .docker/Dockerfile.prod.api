# Stage 1: Build dependencies
FROM python:3.8-slim as builder

# Configurar locale UTF-8
ENV LANG=en_US.UTF-8
ENV LC_ALL=en_US.UTF-8
ENV PYTHONIOENCODING=UTF-8

WORKDIR /build

# Install build dependencies including locales
RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y \
        build-essential \
        default-libmysqlclient-dev \
        libjpeg-dev \
        zlib1g-dev \
        libfreetype6-dev \
        libffi-dev \
        libcairo2-dev \
        python3-dev \
        locales && \
    locale-gen en_US.UTF-8 && \
    rm -rf /var/lib/apt/lists/*

# Install Python packages
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Stage 2: Runtime
FROM python:3.8-slim

# Configurar locale UTF-8
ENV LANG=en_US.UTF-8
ENV LC_ALL=en_US.UTF-8
ENV PYTHONIOENCODING=UTF-8

RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y \
        bash \
        locales && \
    locale-gen en_US.UTF-8 && \
    rm -rf /var/lib/apt/lists/*

RUN mkdir /badgr_server
WORKDIR /badgr_server

# Install only runtime dependencies
RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y \
        libcairo2 \
        libmariadb3 \
        xmlsec1 \
        libjpeg62-turbo \
        nano \
        curl \
        netcat-openbsd && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Copy from builder stage
COPY --from=builder /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin

# Copy application files
COPY manage.py /badgr_server
COPY .docker/etc/uwsgi.ini /badgr_server
COPY .docker/etc/wsgi.py /badgr_server/wsgi.py
COPY apps /badgr_server/apps
COPY .docker/etc/settings_local.prod.py /badgr_server/apps/mainsite/settings_local.py
COPY .docker/init/init_django.sh /badgr_server/init_django.sh

RUN chmod +x /badgr_server/init_django.sh

# ================================
# CORREÇÕES PARA O SWAGGER
# ================================

# Criar diretório swagger-ui se não existir
RUN mkdir -p /badgr_server/apps/mainsite/static/swagger-ui

# Criar especificações mínimas do Swagger
RUN echo '{\
  "swagger": "2.0",\
  "info": {\
    "title": "Badgr API v1",\
    "version": "v1",\
    "description": "API para gerenciamento de badges digitais - UFSC"\
  },\
  "host": "api-badges.setic.ufsc.br",\
  "schemes": ["https", "http"],\
  "basePath": "/v1",\
  "produces": ["application/json"],\
  "consumes": ["application/json"],\
  "securityDefinitions": {\
    "oauth2": {\
      "type": "oauth2",\
      "flow": "implicit",\
      "authorizationUrl": "/o/authorize/",\
      "scopes": {\
        "read": "Read access",\
        "write": "Write access"\
      }\
    }\
  },\
  "paths": {\
    "/": {\
      "get": {\
        "summary": "API Root",\
        "description": "Endpoint raiz da API Badgr v1",\
        "tags": ["root"],\
        "responses": {\
          "200": {\
            "description": "Sucesso"\
          }\
        }\
      }\
    }\
  }\
}' > /badgr_server/apps/mainsite/static/swagger-ui/badgr_spec_v1.json

RUN echo '{\
  "swagger": "2.0",\
  "info": {\
    "title": "Badgr API v2",\
    "version": "v2",\
    "description": "API para gerenciamento de badges digitais - UFSC"\
  },\
  "host": "api-badges.setic.ufsc.br",\
  "schemes": ["https", "http"],\
  "basePath": "/v2",\
  "produces": ["application/json"],\
  "consumes": ["application/json"],\
  "securityDefinitions": {\
    "oauth2": {\
      "type": "oauth2",\
      "flow": "implicit",\
      "authorizationUrl": "/o/authorize/",\
      "scopes": {\
        "read": "Read access",\
        "write": "Write access"\
      }\
    }\
  },\
  "paths": {\
    "/": {\
      "get": {\
        "summary": "API Root",\
        "description": "Endpoint raiz da API Badgr v2",\
        "tags": ["root"],\
        "responses": {\
          "200": {\
            "description": "Sucesso"\
          }\
        }\
      }\
    },\
    "/auth/token": {\
      "post": {\
        "summary": "Obter Token de Autenticação",\
        "description": "Endpoint para autenticação e obtenção de token",\
        "tags": ["auth"],\
        "parameters": [\
          {\
            "name": "credentials",\
            "in": "body",\
            "required": true,\
            "schema": {\
              "type": "object",\
              "properties": {\
                "username": {"type": "string"},\
                "password": {"type": "string"}\
              }\
            }\
          }\
        ],\
        "responses": {\
          "200": {\
            "description": "Token gerado com sucesso"\
          },\
          "401": {\
            "description": "Credenciais inválidas"\
          }\
        }\
      }\
    }\
  }\
}' > /badgr_server/apps/mainsite/static/swagger-ui/badgr_spec_v2.json

# Criar CSS básico do Swagger UI
RUN echo '/* Swagger UI Basic Styles */\
.swagger-ui {\
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;\
}\
.swagger-ui .topbar {\
  background-color: #1b1b1b;\
  padding: 10px 0;\
}\
.swagger-ui .topbar .topbar-wrapper {\
  max-width: 1460px;\
  margin: 0 auto;\
  padding: 0 20px;\
}\
.swagger-ui .info {\
  margin: 20px 0;\
}\
.swagger-ui .scheme-container {\
  background: #fff;\
  padding: 30px 0;\
  box-shadow: 0 1px 2px 0 rgba(0,0,0,.15);\
}\
.swagger-ui .opblock {\
  margin: 0 0 15px;\
  border: 1px solid #000;\
  border-radius: 4px;\
}\
.swagger-ui .opblock.opblock-post {\
  border-color: #49cc90;\
  background: rgba(73,204,144,.1);\
}\
.swagger-ui .opblock.opblock-get {\
  border-color: #61affe;\
  background: rgba(97,175,254,.1);\
}' > /badgr_server/apps/mainsite/static/swagger-ui/swagger-ui.css

# Criar arquivo de descrição da API
RUN echo "# Badgr API Documentation\n\nEsta é a documentação da API do Badgr UFSC para gerenciamento de badges digitais.\n\n## Autenticação\n\nA API utiliza OAuth2 para autenticação. Você pode obter um token de acesso através do endpoint /auth/token.\n\n## Versões\n\n- v1: Versão inicial da API\n- v2: Versão atual com recursos expandidos" > /badgr_server/apps/mainsite/static/swagger-ui/API_DESCRIPTION_v2.md

RUN echo "# Badgr API v1 Documentation\n\nDocumentação da versão 1 da API Badgr UFSC." > /badgr_server/apps/mainsite/static/swagger-ui/API_DESCRIPTION_v1.md

# Verificar arquivos criados
RUN ls -la /badgr_server/apps/mainsite/static/swagger-ui/ || echo "Diretório swagger-ui criado com arquivos básicos"

# Tentar gerar documentação real (se funcionar, sobrescreverá os arquivos mínimos)
RUN python manage.py dist --force || echo "Comando dist falhou, usando especificações mínimas"

# Coletar arquivos estáticos
RUN python manage.py collectstatic --noinput || echo "Collectstatic executado"

# Verificação final - garantir que pelo menos os arquivos mínimos existam
RUN if [ ! -f "/badgr_server/apps/mainsite/static/swagger-ui/badgr_spec_v2.json" ]; then \
    echo "Recriando badgr_spec_v2.json..."; \
    echo '{"swagger":"2.0","info":{"title":"Badgr API v2","version":"v2","description":"API Badgr UFSC"},"host":"api-badges.setic.ufsc.br","schemes":["https"],"basePath":"/v2","produces":["application/json"],"paths":{"/":{"/get":{"summary":"API Root","responses":{"200":{"description":"OK"}}}}}}' > /badgr_server/apps/mainsite/static/swagger-ui/badgr_spec_v2.json; \
fi

RUN if [ ! -f "/badgr_server/apps/mainsite/static/swagger-ui/badgr_spec_v1.json" ]; then \
    echo "Recriando badgr_spec_v1.json..."; \
    echo '{"swagger":"2.0","info":{"title":"Badgr API v1","version":"v1","description":"API Badgr UFSC"},"host":"api-badges.setic.ufsc.br","schemes":["https"],"basePath":"/v1","produces":["application/json"],"paths":{"/":{"/get":{"summary":"API Root","responses":{"200":{"description":"OK"}}}}}}' > /badgr_server/apps/mainsite/static/swagger-ui/badgr_spec_v1.json; \
fi

# Log final para verificação
RUN echo "=== ARQUIVOS SWAGGER CRIADOS ===" && \
    ls -la /badgr_server/apps/mainsite/static/swagger-ui/ && \
    echo "=== CONTEÚDO DO badgr_spec_v2.json ===" && \
    head -n 5 /badgr_server/apps/mainsite/static/swagger-ui/badgr_spec_v2.json || echo "Arquivo não encontrado"

# ================================
# FIM DAS CORREÇÕES SWAGGER
# ================================

EXPOSE 8911
CMD ["/bin/bash", "-c", "./init_django.sh && uwsgi --ini uwsgi.ini"]