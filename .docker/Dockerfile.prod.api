FROM python:3.8-slim-bookworm

ENV LANG=C.UTF-8
ENV LANGUAGE=C.UTF-8
ENV LC_ALL=C.UTF-8
ENV PYTHONIOENCODING=UTF-8

RUN apt-get update && \
    apt-get install -y --no-install-recommends apt-utils && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive DEBCONF_NOWARNINGS=yes apt-get install -y \
    default-libmysqlclient-dev \
    gcc \
    g++ \
    make \
    pkg-config \
    python3-dev \
    libjpeg-dev \
    libpng-dev \
    libfreetype6-dev \
    libffi-dev \
    libcairo2-dev \
    libpango1.0-dev \
    libgdk-pixbuf2.0-dev \
    libxml2-dev \
    libxslt1-dev \
    xmlsec1 \
    curl \
    netcat-openbsd \
    && rm -rf /var/lib/apt/lists/*

RUN mkdir -p /badgr_server
WORKDIR /badgr_server

COPY requirements.txt /badgr_server/
RUN pip install --no-cache-dir -r requirements.txt

COPY manage.py /badgr_server/
COPY .docker/etc/uwsgi.ini /badgr_server/
COPY .docker/etc/wsgi.py /badgr_server/wsgi.py
COPY apps /badgr_server/apps/
COPY .docker/etc/settings_local.prod.py /badgr_server/apps/mainsite/settings_local.py
COPY .docker/init/init_django.sh /badgr_server/init_django.sh

RUN chmod +x /badgr_server/init_django.sh && \
    echo "ðŸ§ª Testando bibliotecas essenciais..." && \
    python3 -c "import MySQLdb; print('âœ… MySQLdb OK')" && \
    python3 -c "import PIL; print('âœ… Pillow OK')" && \
    python3 -c "import cairocffi; print('âœ… cairocffi OK')" && \
    echo "âœ… uWSGI instalado com sucesso" && \
    echo "ðŸŽ‰ Todas as bibliotecas funcionam corretamente!"

EXPOSE 8911
CMD ["sh", "-c", "./init_django.sh && uwsgi uwsgi.ini"]
