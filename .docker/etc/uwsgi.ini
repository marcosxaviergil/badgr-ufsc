[uwsgi]

# Caminho do diretório da aplicação
chdir = /badgr_server

# Aplicação WSGI a ser carregada
module = wsgi:application

# Habilita o processo master e configura workers/threads
master = true
processes = 4
threads = 2

# Usa HTTP nativo na porta 8911
http = :8911

# ✅ SERVIR ARQUIVOS ESTÁTICOS
static-map = /static=/badgr_server/staticfiles
static-map = /media=/badgr_server/mediafiles

# ✅ MIME TYPES COMPLETOS
# Imagens
route-uri = ^/static/.*\.svg$ addheader:Content-Type: image/svg+xml; charset=utf-8
route-uri = ^/static/.*\.png$ addheader:Content-Type: image/png
route-uri = ^/static/.*\.jpg$ addheader:Content-Type: image/jpeg
route-uri = ^/static/.*\.jpeg$ addheader:Content-Type: image/jpeg
route-uri = ^/static/.*\.gif$ addheader:Content-Type: image/gif
route-uri = ^/static/.*\.ico$ addheader:Content-Type: image/x-icon
route-uri = ^/static/.*\.webp$ addheader:Content-Type: image/webp

# CSS e JavaScript
route-uri = ^/static/.*\.css$ addheader:Content-Type: text/css; charset=utf-8
route-uri = ^/static/.*\.js$ addheader:Content-Type: application/javascript; charset=utf-8
route-uri = ^/static/.*\.mjs$ addheader:Content-Type: application/javascript; charset=utf-8

# JSON e dados
route-uri = ^/static/.*\.json$ addheader:Content-Type: application/json; charset=utf-8
route-uri = ^/static/.*\.xml$ addheader:Content-Type: application/xml; charset=utf-8

# Fontes
route-uri = ^/static/.*\.woff$ addheader:Content-Type: font/woff
route-uri = ^/static/.*\.woff2$ addheader:Content-Type: font/woff2
route-uri = ^/static/.*\.ttf$ addheader:Content-Type: font/ttf
route-uri = ^/static/.*\.eot$ addheader:Content-Type: application/vnd.ms-fontobject

# Texto e documentos
route-uri = ^/static/.*\.txt$ addheader:Content-Type: text/plain; charset=utf-8
route-uri = ^/static/.*\.md$ addheader:Content-Type: text/markdown; charset=utf-8
route-uri = ^/static/.*\.html$ addheader:Content-Type: text/html; charset=utf-8

# Source maps e outros
route-uri = ^/static/.*\.map$ addheader:Content-Type: application/json; charset=utf-8

# ✅ ZERO CACHE (mudanças aparecem na hora)
static-expires = 0
static-cache-paths = 0

# ✅ HEADERS ANTI-CACHE FORTES
add-header = Cache-Control: no-cache, no-store, must-revalidate, max-age=0
add-header = Pragma: no-cache
add-header = Expires: Thu, 01 Jan 1970 00:00:00 GMT
add-header = Last-Modified: ${strftime:%%a, %%d %%b %%Y %%H:%%M:%%S GMT}

# ✅ HEADERS DE SEGURANÇA SELETIVOS (não aplicar nosniff em JS/CSS/JSON)
route-uri = ^/static/.*\.html$ addheader:X-Content-Type-Options: nosniff
route-uri = ^.*(?<!\.js)(?<!\.css)(?<!\.json)$ addheader:X-Frame-Options: SAMEORIGIN
add-header = X-XSS-Protection: 1; mode=block

# ✅ PERFORMANCE DE ESTÁTICOS
offload-threads = 4
static-safe = /badgr_server/staticfiles
check-static = /badgr_server/staticfiles

# ✅ LOGS DETALHADOS (útil para debug)
log-static = true
log-slow = 1000
log-4xx = true
log-5xx = true

# ✅ CODIFICAÇÃO
env = LANG=en_US.UTF-8
env = LC_ALL=en_US.UTF-8
env = PYTHONIOENCODING=UTF-8

# ✅ TIMEOUTS E BUFFERS OTIMIZADOS
http-timeout = 300
socket-timeout = 300
buffer-size = 65536
listen = 1024

# ✅ RELOAD AUTOMÁTICO (desenvolvimento)
py-autoreload = 1
touch-reload = /badgr_server/wsgi.py

# ✅ LIMPEZA
vacuum = true
die-on-term = true

# ✅ MELHOR HANDLING DE STATIC FILES
static-check = /badgr_server/staticfiles
static-skip-ext = .pyc,.pyo,.DS_Store
