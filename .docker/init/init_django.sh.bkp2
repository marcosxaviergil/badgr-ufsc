#!/bin/bash
set -eu  # -e: parar ao errar; -u: falha se vari√°vel indefinida

# ‚úÖ Verifica vari√°veis obrigat√≥rias
: "${BADGR_DB_HOST:?Vari√°vel BADGR_DB_HOST n√£o definida}"
: "${BADGR_DB_PORT:?Vari√°vel BADGR_DB_PORT n√£o definida}"

echo "==> Aguardando o banco de dados MySQL em $BADGR_DB_HOST:$BADGR_DB_PORT..."
until nc -z -v -w30 "$BADGR_DB_HOST" "$BADGR_DB_PORT"; do
  echo "‚è≥ Aguardando conex√£o com o banco..."
  sleep 5
done
echo "‚úÖ Banco de dados dispon√≠vel!"

# üõ†Ô∏è Migra√ß√µes
echo "==> Rodando migra√ß√µes do Django"
python manage.py migrate --noinput

# üåê Configura√ß√£o do Site Django (importante para OAuth)
echo "==> Configurando Site Django"
python manage.py shell << EOF
from django.contrib.sites.models import Site
try:
    site = Site.objects.get(id=1)
    if site.domain != 'api-badges.setic.ufsc.br' or site.name != 'Badgr API - UFSC':
        site.domain = 'api-badges.setic.ufsc.br'
        site.name = 'Badgr API - UFSC'
        site.save()
        print('‚úÖ Site atualizado: {}'.format(site.domain))
    else:
        print('‚úÖ Site j√° configurado corretamente: {}'.format(site.domain))
except Site.DoesNotExist:
    site = Site.objects.create(
        id=1,
        domain='api-badges.setic.ufsc.br',
        name='Badgr API - UFSC'
    )
    print('‚úÖ Site criado: {}'.format(site.domain))
EOF

# üë§ Superusu√°rio autom√°tico (se desejado)
if [ "${CREATE_SUPERUSER:-0}" = "1" ]; then
  echo "==> Verificando superusu√°rio"
  ADMIN_EMAIL="${ADMIN_EMAIL:-admin@api-badges.setic.ufsc.br}"
  ADMIN_PASSWORD="${ADMIN_PASSWORD:-admin}"
  
  python manage.py shell << EOF
from django.contrib.auth import get_user_model
from django.db import IntegrityError

User = get_user_model()

try:
    # Verifica se o usu√°rio j√° existe
    user = User.objects.get(email='${ADMIN_EMAIL}')
    print('‚úÖ Superusu√°rio j√° existe: {}'.format(user.email))
    print('   ‚ö†Ô∏è  Senha e dados do usu√°rio N√ÉO foram alterados')
    
    # Verifica se √© superusu√°rio, se n√£o for, atualiza apenas essa flag
    if not user.is_superuser:
        user.is_superuser = True
        user.is_staff = True
        user.save(update_fields=['is_superuser', 'is_staff'])
        print('   ‚úÖ Permiss√µes de superusu√°rio concedidas')
        
except User.DoesNotExist:
    # Cria novo usu√°rio apenas se n√£o existir
    try:
        user = User.objects.create_superuser(
            email='${ADMIN_EMAIL}',
            first_name='Admin',
            last_name='UFSC',
            password='${ADMIN_PASSWORD}'
        )
        print('‚úÖ Superusu√°rio criado: {}'.format(user.email))
        print('   ‚ö†Ô∏è  ATEN√á√ÉO: Altere a senha padr√£o ap√≥s o primeiro login!')
    except IntegrityError as e:
        print('‚ùå Erro ao criar superusu√°rio: {}'.format(str(e)))
    except Exception as e:
        print('‚ùå Erro inesperado: {}'.format(str(e)))
EOF
fi

# üìÅ Coleta de arquivos est√°ticos
STATIC_DIR="/badgr_server/staticfiles"
if [ ! -d "$STATIC_DIR" ] || [ -z "$(ls -A "$STATIC_DIR" 2>/dev/null)" ]; then
  echo "==> Coletando arquivos est√°ticos"
  python manage.py collectstatic --noinput
else
  echo "‚úÖ Arquivos est√°ticos j√° presentes em $STATIC_DIR"
fi

echo "‚úÖ Inicializa√ß√£o conclu√≠da"
